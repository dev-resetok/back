<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.back.mapper.report.ReportMapper">
<sql id="search">
    <if test="search.keyword != null and search.keyword != 'null'.toString()">
        <choose>
            <when test="search.types != null">
                <foreach item="type" collection="search.types">
                    <if test="type == 'post-title'.toString()">
                        and post_title like concat('%', #{search.keyword}, '%')
                    </if>
                </foreach>
            </when>
            <otherwise>
                and (
                post_title like concat('%', #{search.keyword}, '%')
                )
            </otherwise>
        </choose>
    </if>
</sql>

<insert id="insert">
    insert into tbl_report (id, report_reason, report_status, post_id, member_id)
    values (#{id}, #{reportReason}, #{reportStatus}, #{postId}, #{memberId});
</insert>

<select id="selectAll" resultType="reportDTO">
    select
    r.id,
    r.report_reason,
    r.report_status,
    p.post_title,
    p.created_date,
    m.member_nickname
    from tbl_report r
        join tbl_post p on r.post_id = p.id
        join tbl_member m on r.member_id = m.id
    <include refid="search"/>
    order by r.id desc
    limit #{pagination.startRow}, #{pagination.rowCount};
</select>

<select id="selectFilterAll" resultType="reportDTO">
    select
    r.id,
    r.report_reason,
    r.report_status,
    p.post_title,
    p.created_date,
    m.member_nickname
    from tbl_report r
    join tbl_post p on r.post_id = p.id
    join tbl_member m on r.member_id = m.id
    <include refid="search"/>
    <where>
    where r.report_status = #{pagination.order}
    </where>
    order by
    <choose>
        <when test="pagination.order == 'recent'">p.created_date</when>
        <otherwise>r.report_status</otherwise>
    </choose> desc
    limit #{pagination.startRow}, #{pagination.rowCount};
</select>

<select id="selectById" resultType="reportDTO">
    select id, post_title, post_content
    from tbl_post
    where id = #{id}
</select>

<select id="selectTotal">
    select count(*) from tbl_report
</select>

<select id="selectTotalWithSearch">
    select count(*)
    from tbl_report r
    join tbl_post p on r.post_id = p.id
    <include refid="search"/>
</select>

<select id="selectTotalWithFilter" resultType="int">
    select count(*)
    from tbl_report r
    join tbl_post p on r.post_id = p.id
    join tbl_member m on r.member_id = m.id
    <include refid="search"/>
    <if test="filterType != null">
        and r.report_status = #{filterType}
    </if>
</select>

<update id="updateById">
    update tbl_report
    set report_reason = #{reportReason}
    where id = #{id}
</update>

<update id="updateStatus">
    update tbl_report
    set report_status = #{status}
    where id = #{id}
</update>

<delete id="deleteById">
    delete from tbl_report
    where id = #{id}
</delete>

</mapper>
